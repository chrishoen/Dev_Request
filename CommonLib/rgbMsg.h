#pragma once

/*==============================================================================
This file contains a set of classes that encapsulate a message set.

There is a class for each particular message in the set and there is a
base class that all of the messages inherit from.

These messages follow the ByteContent pattern, where they all inherit
from ByteContent so that they can be copied to/from ByteBuffers.

The base class is used to specify set membership, any inheriting class
is a member of the message set, and message objects can be referenced
anonymously via pointers to the the base class.

The base class provides a member function, makeFromByteBuffer, that
extracts particular messages from a byte buffer and returns a pointer
to the base class.

These messages all have the same common form, they all contain a
common message header. The base class has a Header member object that
encapsulates the header.
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************
#include "risByteContent.h"
#include "risByteBlob.h"
#include "risByteMsgMonkey.h"
#include "rgbMsgBase.h"

namespace RGB
{
//******************************************************************************
//******************************************************************************
//******************************************************************************
// Message Types

class MsgIdT
{
public:

   static const int   cUnspecifiedMsg    = 0;
   static const int   cTestMsg           = 1;
   static const int   cFirstMessageMsg   = 2;
   static const int   cRedRequestMsg     = 3;
   static const int   cRedResponseMsg    = 4;
   static const int   cGreenRequestMsg   = 5;
   static const int   cGreenResponseMsg  = 6;
   static const int   cBlueRequestMsg    = 7;
   static const int   cBlueResponseMsg   = 8;
};

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Particular message classes.
// There is one class for each message in the message set.

class TestMsg : public BaseMsg
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   int mCode1;
   int mCode2;
   int mCode3;
   int mCode4;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   TestMsg();
   void show(int aPF = 0);
   void copyToFrom (Ris::ByteBuffer* aBuffer);
};

//******************************************************************************
//******************************************************************************
//******************************************************************************

class FirstMessageMsg : public BaseMsg
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   int mCode1;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   FirstMessageMsg();
   void show(int aPF = 0);
   void copyToFrom (Ris::ByteBuffer* aBuffer);
};

//******************************************************************************
//******************************************************************************
//******************************************************************************

class RedRequestMsg : public BaseMsg
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   int mCode1;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   RedRequestMsg();
   void show(int aPF = 0);
   void copyToFrom (Ris::ByteBuffer* aBuffer);
};

//******************************************************************************
//******************************************************************************
//******************************************************************************

class RedResponseMsg : public BaseMsg
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   int mCode1;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   RedResponseMsg();
   void show(int aPF = 0);
   void copyToFrom(Ris::ByteBuffer* aBuffer);
};

//******************************************************************************
//******************************************************************************
//******************************************************************************

class GreenRequestMsg : public BaseMsg
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   int mCode1;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   GreenRequestMsg();
   void show(int aPF = 0);
   void copyToFrom(Ris::ByteBuffer* aBuffer);
};

//******************************************************************************
//******************************************************************************
//******************************************************************************

class GreenResponseMsg : public BaseMsg
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   int mCode1;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   GreenResponseMsg();
   void show(int aPF = 0);
   void copyToFrom(Ris::ByteBuffer* aBuffer);
};

//******************************************************************************
//******************************************************************************
//******************************************************************************

class BlueRequestMsg : public BaseMsg
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   int mCode1;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   BlueRequestMsg();
   void show(int aPF = 0);
   void copyToFrom(Ris::ByteBuffer* aBuffer);
};

//******************************************************************************
//******************************************************************************
//******************************************************************************

class BlueResponseMsg : public BaseMsg
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   int mCode1;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   BlueResponseMsg();
   void show(int aPF = 0);
   void copyToFrom(Ris::ByteBuffer* aBuffer);
};

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Message creator:

// Create a new message, based on a message type.
void* createMsg(int aMessageType);

// Destroy a message.
//void destroyMsg(void* aMsg);

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace


